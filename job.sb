#!/bin/bash -l
#SBATCH -J FORGE
#SBATCH -A gen243
#SBATCH -t 01:30:00
#SBATCH -N 2
#SBATCH -q debug
#SBATCH --exclusive
#SBATCH --ntasks-per-node=8
#SBATCH --gpus-per-node=8
#SBATCH -o neox.o%j
#SBATCH -e neox.e%j

MODEL=forge-l
module use ../modules
module load forge

mkdir -p logs/$MODEL
export CXX=/opt/cray/pe/gcc-native/14/bin/g++
export MASTER_HOSTNAME=$(hostname)
export MASTER_ADDR=$(hostname -i)
export LD_LIBRARY_PATH=/lustre/orion/gen243/world-shared/bbhusal/FORGE_TRAINING/TORCH2.8.0_ROCM6.4.1/build/aws-ofi-rccl/lib:$LD_LIBRARY_PATH
export MASTER_PORT=3442
export NCCL_SOCKET_IFNAME=hsn0
export NCCL_DEBUG=INFO
export NCCL_DEBUG_FILE=nccl_logs

export NCCL_CROSS_NIC=1
export FI_MR_CACHE_MONITOR=kdreg2     # Required to avoid a deadlock.
export FI_CXI_DEFAULT_CQ_SIZE=131072  # Ask the network stack to allocate additional space to process message completions.
export FI_CXI_DEFAULT_TX_SIZE=2048    # Ask the network stack to allocate additional space to hold pending outgoing messages.
export FI_CXI_RX_MATCH_MODE=hybrid    # Allow the network stack to transition to software mode if necessary.

echo "PATH=$PATH" > .deepspeed_env
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> .deepspeed_env
echo "CPATH=$CPATH" >> .deepspeed_env
echo "CUDAPATH=${ROCM_PATH}" >> .deepspeed_env
echo "TORCH_EXTENSIONS_DIR=$(pwd)/deepspeed" >> .deepspeed_env
echo "NCCL_DEBUG=INFO" >> .deepspeed_env
echo "NCCL_DEBUG_FILE=nccl_logs" >> .deepspeed_env
echo "NCCL_SOCKET_IFNAME=hsn0" >> .deepspeed_env
echo "CXX=/opt/cray/pe/gcc-native/14/bin/g++" >> .deepspeed_env
echo "MASTER_HOSTNAME=$(hostname)" >> .deepspeed_env
echo "MASTER_ADDR=$(hostname -i)" >> .deepspeed_env
echo "MASTER_PORT=3442" >> .deepspeed_env
echo "NCCL_CROSS_NIC=1" >> .deepspeed_env

echo "FI_MR_CACHE_MONITOR=kdreg2" >> .deepspeed_env     # Required to avoid a deadlock.
echo "FI_CXI_DEFAULT_CQ_SIZE=131072" >> .deepspeed_env  # Ask the network stack to allocate additional space to process message completions.
echo "FI_CXI_DEFAULT_TX_SIZE=2048" >> .deepspeed_env    # Ask the network stack to allocate additional space to hold pending outgoing messages.
echo "FI_CXI_RX_MATCH_MODE=hybrid" >> .deepspeed_env    # Allow the network stack to transition to software mode if necessary.

scontrol show hostnames $SLURM_NODELIST > logs/${MODEL}/hostfile
input="logs/${MODEL}/hostfile"
readarray -t arr <"$input"

rm logs/${MODEL}/hostfile
for row in "${arr[@]}";do
  row_array=(${row})
  hostname=${row_array[0]}

  cmd="ssh ${hostname} ${ROCM_PATH}/bin/rocm-smi"
  echo $cmd
  #$cmd
  echo "$hostname slots=8" >> logs/${MODEL}/hostfile
done

python -u ./deepy.py train.py -d configs ${MODEL}.yml
